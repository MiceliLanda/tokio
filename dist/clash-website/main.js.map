{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/auth.service.ts","./src/app/site/confirmed.validator.ts","./src/app/site/home/home.component.ts","./src/app/site/home/home.component.html","./src/app/site/login/login.component.ts","./src/app/site/login/login.component.html","./src/app/site/navbar/navbar.component.ts","./src/app/site/navbar/navbar.component.html","./src/app/site/register/register.component.ts","./src/app/site/register/register.component.html","./src/app/site/remember-password/remember-password.component.ts","./src/app/site/remember-password/remember-password.component.html","./src/app/site/site-routing.module.ts","./src/app/site/site.component.ts","./src/app/site/site.component.html","./src/app/site/site.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport { LoginComponent } from './site/login/login.component';\nimport { RegisterComponent } from './site/register/register.component';\nimport { HomeComponent } from './site/home/home.component';\nimport { RememberPasswordComponent } from './site/remember-password/remember-password.component';\n\nconst routes: Routes = [{\n  path: 'site', loadChildren: () => import('./site/site.module').then(m => m.SiteModule)},\n  {path: 'hosts', loadChildren: () => import('./hosts/hosts.module').then(m => m.HostsModule)\n  },{path: 'login', component: LoginComponent},\n  {path: 'home', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'remember-password', component: RememberPasswordComponent} ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'clash-website';\n}\n","\n<div>\n    <router-outlet></router-outlet>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { from } from 'rxjs';\nimport { SiteModule } from './site/site.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from 'src/environments/environment';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SiteModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireAuthModule\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { User } from 'src/app/site/user/user.interface';\nimport { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase/app';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  public user$: Observable<User>;\n\n  constructor(public afAuth: AngularFireAuth, private afs: AngularFirestore, private router :Router) {\n    this.user$ = this.afAuth.authState.pipe(\n      switchMap((user) => {\n        if (user) {\n          return this.afs.doc<User>(`users/${user.uid}`).valueChanges();\n        }\n        return of(null);\n      })\n    );\n  }\n\n  showErrorAlert(error) {\n    Swal.fire('Error!', error, 'error');\n  }\n\n  showSuccessAlert() {\n    Swal.fire('Excellent!', 'Your Account Was Created Successfully!', 'success')\n  }\n\n\n  async loginGoogle(): Promise<User> {\n    try {\n      const { user } = await this.afAuth.signInWithPopup(\n        new auth.GoogleAuthProvider()\n      );\n      return user;\n    } catch (error) {\n           this.showErrorAlert(error.toString())       \n    }\n  }\n\n  async resetPassword(email: string): Promise<void> {\n    try {\n      return this.afAuth.sendPasswordResetEmail(email);\n      \n    } catch (error) {\n      this.showErrorAlert(error.toString())\n    }\n  }\n\n  async sendVerificationEmail(): Promise<void> {\n    return (await this.afAuth.currentUser).sendEmailVerification();\n  }\n\n  async login(email: string, password: string): Promise<User> {\n    try {\n      const { user } = await this.afAuth.signInWithEmailAndPassword(\n        email,\n        password\n      );\n      return user;\n    } catch (error) {\n      this.showErrorAlert(error.toString())\n    }\n  }\n\n  async register(email: string, password: string): Promise<User> {\n    try {\n      const { user } = await this.afAuth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n      await this.sendVerificationEmail();\n      this.showSuccessAlert();\n      this.router.navigate(['/login']);\n      return user;\n    } catch (error) {\n      this.showErrorAlert(error.toString())\n    }\n  }\n\n  async logout(): Promise<void> {\n    try {\n      await this.afAuth.signOut();\n    } catch (error) {\n      this.showErrorAlert(error.toString())\n    }\n  }\n\n}\n","import { FormGroup } from '@angular/forms';\n    \nexport function ConfirmedValidator(controlName: string, matchingControlName: string){\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\n            return;\n        }\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ confirmedValidator: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/site/user/user.interface';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm = new FormGroup({\n    email: new FormControl(''),\n    password: new FormControl(''),\n  });\n\n  constructor(private authSv: AuthService,private router: Router){ }\n\n  showErrorAlert(error) {\n    Swal.fire('Error!', error, 'error');\n  }\n\n  async onLogin() {\n    const { email, password, } = this.loginForm.value;\n    try {\n      const user = await this.authSv.login(email, password);\n      if (user) {\n        this.checkUserIsVerified(user);\n      }\n    } catch (error) {\n      this.showErrorAlert(error.toString())\n    }\n  }\n\n  private checkUserIsVerified(user: User) {\n    if (user.email) {\n      this.router.navigate(['/home']);\n      console.log(\"verificado\");\n    } else if (user) {\n      this.router.navigate(['/remember-password']);\n      console.log(\"contraseña no valida\");\n      \n    } else {\n      this.router.navigate(['/register']);\n    }\n  }\n\n\n  async onGoogleLogin() {\n    try {\n      const user = await this.authSv.loginGoogle();\n      if (user) {\n        this.checkUserIsVerified(user);\n      }\n    } catch (error) {\n      this.showErrorAlert(error.toString());\n    }\n  }\n\n} //login\n\n\n\n","<app-navbar></app-navbar>\n<br><br><br>\n<link rel=\"stylesheet\" href=\"/src/styles.css\">\n<div class=\"row\">\n    <div class=\"col-md-4 mx-auto mt-5\">\n      <div >\n        <div class=\"box\">\n          <h1 class=\"text-center\" style=\"color: #8c8c8c; font-weight: bold;\">Sign in</h1>\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n            <div class=\"form-group\">\n              <label for=\"email\" id=\"email\" style=\"color: #8c8c8c; font-weight: bold;\">Email</label>\n              <input type=\"email\" class=\"form-control\" formControlName=\"email\" />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"password\" id=\"password\" style=\"color: #8c8c8c; font-weight: bold;\">Password</label>\n              <input\n                type=\"password\"\n                class=\"form-control\"\n                formControlName=\"password\"\n              />\n            </div>\n            <br>\n            <button class=\"btn btn-primary btn-lg btn-block\" style=\"background: #001affb7; font-weight: bold;\">\n              Login\n            </button>\n          </form>\n          <div class=\"form-group mt-3\">\n            <button (click)=\"onGoogleLogin()\" class=\"btn btn-danger btn-lg btn-block\" style=\"background: tomato;font-weight: bold;\">\n              Google\n            </button>\n          </div>\n          <div class=\"form-group mt-3\">\n            <p style=\"color: #8c8c8c ;font-weight: bold;font-size:16px;\">\n              Create account <a [routerLink]=\"['/register']\"> Register </a>\n            </p>\n          </div>\n          <div class=\"form-group mt-3\" style=\"color: rgb(35, 37, 53); font-size:16px;\">\n            <p>\n              <a [routerLink]=\"['/remember-password']\"style=\"font-weight: bold;\"> Forgot password </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { User } from '../user/user.interface';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\n\nexport class NavbarComponent{\n  public user$: Observable<User> = this.authSv.afAuth.user;\n\n  constructor(public authSv: AuthService, private router: Router) { }\n\n  showErrorAlert(error) {\n    Swal.fire('Error!', error, 'error');\n  }\n\n  async onLogout() {\n    try {\n      await this.authSv.logout();\n      this.router.navigate(['/login']);\n    } catch (error) {\n      this.showErrorAlert(error.toString())\n    }\n  }\n\n\n}\n","<header class=\"site-header-one stricky site-header-one__fixed-top\" style=\"background:#ffffff;\">\n  <div class=\"container-fluid\">\n    <div class=\"site-header-one__logo\">\n      <a href=\"index.html\">\n        <img src=\"assets/images/logo-1-1.png\" width=\"129\" alt=\"\">\n      </a>\n      <span class=\"side-menu__toggler\"><i class=\"fa fa-bars\"></i></span><!-- /.side-menu__toggler -->\n    </div>\n    <div class=\"main-nav__main-navigation\">\n      <ul class=\"main-nav__navigation-box one-page-scroll-menu\">\n        <li class=\"scrollToLink\"> <a routerLink=\"/home\">Home</a></li>\n        <li class=\"scrollToLink\"><a routerLink=\"/register\">Create Account</a></li>\n        <li class=\"dropdown scrollToLink\">\n        </li>\n      </ul>\n    </div>\n    <div class=\"main-nav__main-navigation\" style=\"padding-left: 365px;\">\n      <ul class=\"main-nav__navigation-box\" *ngIf=\"user$ | async as user; else login\">\n        <li *ngIf=\"user\"> \n          <a class=\"main-nav__main-navigation\" style=\"padding-right: 20px;\">\n            {{ user?.email }}\n          </a>\n        </li>\n        <a href=\"/login\" (click)=\"onLogout()\" class=\"thm-btn main-nav__btn\" style=\"background:#8c8c8c;\"><span> Logout </span></a>\n      </ul>\n       <ng-template #login>\n        <a routerLink=\"/login\" class=\"thm-btn main-nav__btn\" style=\"background:#8c8c8c;\"><span>Sign In</span></a> \n      </ng-template> \n    </div> \n  </div>\n</header>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from 'src/app/services/auth.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { ConfirmedValidator } from '../confirmed.validator';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  registerForm: FormGroup = new FormGroup({\n    email: new FormControl(''),\n    password: new FormControl('')\n  });\n\n  \n\n  constructor(private authSv: AuthService, private fb: FormBuilder, private router: Router) {\n    this.registerForm = fb.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      confirm_password: ['', [Validators.required]]\n    }, { \n      validator: ConfirmedValidator('password', 'confirm_password')\n    }) \n  }\n\n\n  get f(){\n    return this.registerForm.controls;\n  }\n\n  onRegister(registerData){   \n\n      this.authSv.register(registerData.email, registerData.password);   \n  }\n\n}\n\n","<app-navbar></app-navbar>\n<br><br><br>\n<div class=\"row\">\n    <div class=\"col-md-4 mx-auto mt-5\">\n      <div class=\"box\">\n        <div class=\"card-body\">\n          <h1 class=\"text-center\"style=\"color: #8c8c8c; font-weight: bold;\">Sign Up</h1>\n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister(registerForm.value)\">\n            <div class=\"form-group\">\n              <label for=\"email\" id=\"email\" style=\"color:#8c8c8c; font-weight: bold;\">Email</label>\n              <input type=\"email\" class=\"form-control\" formControlName=\"email\" required/>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\" style=\"color: #8c8c8c; font-weight: bold;\">Password</label>\n                <input \n                    formControlName=\"password\"\n                    id=\"password\" \n                    type=\"password\" \n                    class=\"form-control\">\n                <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"alert alert-danger\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required.</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"confirm_password\" style=\"color: #8c8c8c; font-weight: bold;\">Confirm Password</label>\n                <input \n                    formControlName=\"confirm_password\"\n                    id=\"confirm_password\" \n                    type=\"password\" \n                    class=\"form-control\">\n                <div *ngIf=\"f.confirm_password.touched && f.confirm_password.invalid\" class=\"alert alert-danger\">\n                    <div *ngIf=\"f.confirm_password.errors.required\">Password is required.</div>\n                    <div *ngIf=\"f.confirm_password.errors.confirmedValidator\">Password and Confirm Password must be match.</div>\n                </div>\n            </div>\n            <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\" [disabled]=\"!registerForm.valid\">Register</button>\n        </form>        \n          <div class=\"form-group mt-3\">\n            <p style=\"color: rgb(35, 37, 53)font-weight: bold;\">\n              Do you have account?<a [routerLink]=\"['/login']\"> Login </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-remember-password',\n  templateUrl: './remember-password.component.html',\n  styleUrls: ['./remember-password.component.css']\n})\n\n\nexport class RememberPasswordComponent {\n  SendEmail = new FormControl('');\n  constructor(private authSvc: AuthService, private router: Router) {}\n\n  showErrorAlert(error) {\n    Swal.fire('Error!', error, 'error');\n  }\n\n  showSuccessAlert() {\n    Swal.fire('Excellent!', 'Send Email', 'success')\n  }\n\n  async rememberPassword() {\n    try {\n      const email = this.SendEmail.value;\n      await this.authSvc.resetPassword(email);\n      this.showSuccessAlert();\n      this.router.navigate(['/login']);\n    } catch (error) {\n      this.showErrorAlert(error.toString())\n    }\n  }\n}\n\n  \n\n  \n\n","<app-navbar></app-navbar>\n<br><br><br><br>\n<div class=\"row\">\n  <div class=\"col-md-4 mx-auto mt-5\">\n    <div class=\"box\">\n      <div class=\"card-body\">\n        <h1 class=\"text-center\" style=\"color: #8c8c8c; font-weight: bold;\">Recover Password</h1>\n        <label for=\"inputEmail\" class=\"col-sm-5 col-form-label\" style=\" font-weight: bold;\">Email</label>\n          <input type=\"text\" class=\"form-control\" id=\"SendEmail\"  [formControl]=\"SendEmail\">\n        <div class=\"form-group mt-3\">\n          <button class=\"btn btn-primary btn-lg btn-block\" (click)=\"rememberPassword()\">  Send Email </button> \n          <br>\n          <p style=\"color: #8c8c8c;\">\n            Do you remember your password? Let's go to <a [routerLink]=\"['/login']\"> Login </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SiteComponent } from './site.component';\n\nconst routes: Routes = [{ path: '', component: SiteComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SiteRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-site',\n  templateUrl: './site.component.html',\n  styleUrls: ['./site.component.css']\n})\nexport class SiteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-navbar></app-navbar>\n<body>\n  \n</body>\n<div class=\"preloader\">\n  <img src=\"assets/images/loader.png\" width=\"75\" class=\"preloader__image\" alt=\"\">\n</div><!-- /.preloader -->\n\n<div class=\"page-wrapper\">\n\n  \n  \n  \n<!--   <router-outlet></router-outlet> -->\n  <app-home></app-home>\n  \n\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { SiteRoutingModule } from './site-routing.module';\nimport { SiteComponent } from './site.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RememberPasswordComponent } from './remember-password/remember-password.component';\n/* import { AngularFireAuthModule } from '@angular/fire/auth' */\n@NgModule({\n  declarations: [SiteComponent, HomeComponent, NavbarComponent, LoginComponent, RegisterComponent, RememberPasswordComponent],\n  imports: [\n    CommonModule,\n    SiteRoutingModule,\n    ReactiveFormsModule,\n /*    AngularFireAuthModule */\n  ]\n})\nexport class SiteModule { }\n","export const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyCuWTTqpy8RrRQM__1AeYkrUniAf13wSjE\",\n    authDomain: \"clashwebsite-4971f.firebaseapp.com\",\n    databaseURL: \"https://clashwebsite-4971f.firebaseio.com\",\n    projectId: \"clashwebsite-4971f\",\n    storageBucket: \"clashwebsite-4971f.appspot.com\",\n    messagingSenderId: \"523517472349\",\n    appId: \"1:523517472349:web:1d389da3c22e331fc667b4\",\n    measurementId: \"G-2E3QM8MWV6\"\n  },\n\n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}